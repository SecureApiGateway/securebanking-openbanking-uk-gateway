{
  "comment": "Ensure FAPI compliant pushed authorize requests",
  "name": "06 - Open Banking Pushed Authorize Request endpoint",
  "auditService": "AuditService-OB-Route",
  "baseURI": "https://&{identity.platform.fqdn}",
  "condition": "${find(request.uri.path, '^/am/oauth2/realms/root/realms/&{am.realm}/par')}",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "name": "RouteMetricsFilter",
          "type": "RouteMetricsFilter"
        },
        "SBATFapiInteractionFilterChain",
        {
          "comment": "Add host to downstream request",
          "name": "HeaderFilter-ChangeHostToIAM",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "remove": [
              "host",
              "X-Forwarded-Host",
              "origin",
              "referer"
            ],
            "add": {
              "X-Forwarded-Host": [
                "&{ig.fqdn}"
              ]
            }
          }
        },
        {
          "name": "FapiParRequestValidationFilter",
          "type": "FapiParRequestValidationFilter",
          "comment": "Ensure authorize request object is FAPI compliant"
        },
        {
          "name": "ParEndpointTransportCertValidationFilter",
          "type": "ParEndpointTransportCertValidationFilter",
          "comment": "Verify that the client's transport cert is valid (if supplied for mTLS auth) and is mapped to their SSA",
          "config": {
            "trustedDirectoryService": "TrustedDirectoryService",
            "jwkSetService": "JwkSetService",
            "certificateRetriever": "HeaderCertificateRetriever",
            "transportCertValidator": "TransportCertValidator"
          }
        },
        {
          "name": "ParResponseFetchApiClientFilter",
          "type": "ParResponseFetchApiClientFilter",
          "comment": "Add ApiClient data to the context attributes",
          "config": {
            "apiClientService": "IdmApiClientService"
          }
        }
      ],
      "handler": "FRReverseProxyHandler"
    }
  }
}